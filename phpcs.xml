<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PHP_CodeSniffer" xsi:noNamespaceSchemaLocation="phpcs.xsd">
    <description>The coding standard for PHP_CodeSniffer itself.</description>

    <file>value-object/src</file>
    <file>value-object/tests</file>

    <file>persistence/src</file>
    <file>persistence/tests</file>

    <file>filesystem-storage/src</file>
    <file>filesystem-storage/tests</file>

<!--    <exclude-pattern>*/src/Standards/*/Tests/*\.(inc|css|js)$</exclude-pattern>-->
<!--    <exclude-pattern>*/tests/Core/*/*Test\.(inc|css|js)$</exclude-pattern>-->

    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
    <!-- Don't hide tokenizer exceptions -->
    <rule ref="Internal.Tokenizer.Exception">
        <type>error</type>
    </rule>
    <!-- Include the whole PSR-12 standard -->
    <rule ref="PSR12">

    </rule>

    <!-- Ban some functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count"/>
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="is_null" value="null"/>
                <element key="create_function" value="null"/>
                <element key="isset" value="null"/>
            </property>
        </properties>
    </rule>

    <!-- This test file specifically *needs* Windows line endings for testing purposes. -->
    <rule ref="Generic.Files.LineEndings.InvalidEOLChar" />
    <rule ref="Generic.PHP.RequireStrictTypes" />
</ruleset>
